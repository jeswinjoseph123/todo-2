{"version":3,"sources":["Component/TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","state","input","items","handle","e","setState","target","value","store","preventDefault","delete","index","allItems","splice","this","className","onSubmit","type","onChange","placeholder","map","data","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAGqBA,G,kNACnBC,MAAQ,CACNC,MAAO,GACPC,MAAO,I,EAETC,OAAS,SAACC,GACR,EAAKC,SAAS,CACZJ,MAAOG,EAAEE,OAAOC,S,EAIpBC,MAAQ,SAACJ,GACPA,EAAEK,iBADW,IAELR,EAAU,EAAKD,MAAfC,MAER,EAAKI,SAAS,CACZH,MAAM,GAAD,mBAAM,EAAKF,MAAME,OAAjB,CAAwBD,IAC7BA,MAAO,M,EAGXS,OAAS,SAACC,GACR,IAAMC,EAAW,EAAKZ,MAAME,MAE5BU,EAASC,OAAOF,EAAO,GAEvB,EAAKN,SAAS,CACZH,MAAOU,K,uDAGD,IAAD,SACkBE,KAAKd,MAAtBC,EADD,EACCA,MAAOC,EADR,EACQA,MAEf,OACE,sBAAKa,UAAU,YAAf,UACE,uBAAMA,UAAU,QAAQC,SAAUF,KAAKN,MAAvC,UACE,0CACA,uBACES,KAAK,OACLV,MAAON,EACPiB,SAAUJ,KAAKX,OACfgB,YAAY,sBAGhB,6BACGjB,EAAMkB,KAAI,SAACC,EAAMV,GAAP,OACT,+BACGU,EACD,mBACEN,UAAU,mBACVO,QAAS,kBAAM,EAAKZ,OAAOC,QAJtBA,e,GA7CaY,cCAbC,E,uKAEjB,OACE,8BACE,cAAC,EAAD,U,GAJyBD,aCSlBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ec53ef77.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./TodoApp.css\";\r\n\r\nexport default class Todo extends Component {\r\n  state = {\r\n    input: \"\",\r\n    items: [],\r\n  };\r\n  handle = (e) => {\r\n    this.setState({\r\n      input: e.target.value,\r\n    });\r\n  };\r\n\r\n  store = (e) => {\r\n    e.preventDefault();\r\n    const { input } = this.state;\r\n\r\n    this.setState({\r\n      items: [...this.state.items, input],\r\n      input: \"\",\r\n    });\r\n  };\r\n  delete = (index) => {\r\n    const allItems = this.state.items;\r\n\r\n    allItems.splice(index, 1);\r\n\r\n    this.setState({\r\n      items: allItems,\r\n    });\r\n  };\r\n  render() {\r\n    const { input, items } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"input\" onSubmit={this.store}>\r\n          <h1>Todo App</h1>\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={this.handle}\r\n            placeholder=\"Enter Items...\"\r\n          />\r\n        </form>\r\n        <ul>\r\n          {items.map((data, index) => (\r\n            <li key={index}>\r\n              {data}\r\n              <i\r\n                className=\"fas fa-trash-alt\"\r\n                onClick={() => this.delete(index)}\r\n              ></i>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport Todo from \"./Component/TodoApp\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Todo />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}